{"ast":null,"code":"var _jsxFileName = \"/home/navin/word-clone/src/components/Game/Game.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { sample } from \"../../utils\";\nimport { WORDS } from \"../../data\"; // Pick a random word on every pageload.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst answer = sample(WORDS); // To make debugging easier, we'll log the solution in the console.\n// console.info({ answer });\n\nfunction handleEvent(event) {\n  setInput(event.target.value);\n  console.log(event.target.value);\n}\n\nfunction Game() {\n  _s();\n\n  const [input, setInput] = React.useState(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"guess-input-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"guess-input\",\n        children: \"Enter Guess:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"guess-input\",\n        type: \"text\",\n        value: input,\n        onChange: handleEvent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n\n_s(Game, \"RL+Zbs2TIka0YpcBOJptmHqCgYA=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/home/navin/word-clone/src/components/Game/Game.js"],"names":["React","sample","WORDS","answer","handleEvent","event","setInput","target","value","console","log","Game","input","useState"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,KAAT,QAAsB,YAAtB,C,CAEA;;;;AACA,MAAMC,MAAM,GAAGF,MAAM,CAACC,KAAD,CAArB,C,CACA;AACA;;AAEA,SAASE,WAAT,CAAqBC,KAArB,EAA4B;AAC3BC,EAAAA,QAAQ,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAR;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACE,MAAN,CAAaC,KAAzB;AACA;;AAED,SAASG,IAAT,GAAgB;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQN,QAAR,IAAoBN,KAAK,CAACa,QAAN,CAAe,EAAf,CAA1B;AACA,sBACC;AAAA,2BACC;AAAM,MAAA,SAAS,EAAC,qBAAhB;AAAA,8BACC;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AACC,QAAA,EAAE,EAAC,aADJ;AAEC,QAAA,IAAI,EAAC,MAFN;AAGC,QAAA,KAAK,EAAED,KAHR;AAIC,QAAA,QAAQ,EAAER;AAJX;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AAaA;;GAfQO,I;;KAAAA,I;AAiBT,eAAeA,IAAf","sourcesContent":["import React from \"react\";\n\nimport { sample } from \"../../utils\";\nimport { WORDS } from \"../../data\";\n\n// Pick a random word on every pageload.\nconst answer = sample(WORDS);\n// To make debugging easier, we'll log the solution in the console.\n// console.info({ answer });\n\nfunction handleEvent(event) {\n\tsetInput(event.target.value);\n\tconsole.log(event.target.value);\n}\n\nfunction Game() {\n\tconst [input, setInput] = React.useState(\"\");\n\treturn (\n\t\t<>\n\t\t\t<form className=\"guess-input-wrapper\">\n\t\t\t\t<label htmlFor=\"guess-input\">Enter Guess:</label>\n\t\t\t\t<input\n\t\t\t\t\tid=\"guess-input\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={input}\n\t\t\t\t\tonChange={handleEvent}\n\t\t\t\t></input>\n\t\t\t</form>\n\t\t</>\n\t);\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}